module Workarea
  module Admin
    decorate OrdersSystemTest, with: :taxjar do
      def test_attributes
        order = create_placed_order(
          traffic_referrer: {
            uri: 'https://foo.bar'
          }
        )

        visit admin.order_path(order)

        click_link t('workarea.admin.cards.attributes.title')

        assert_text('Test Product')
        assert_text('SKU')
        assert_text("#{Money.default_currency.symbol}10.00") # Subtotal
        assert_text("#{Money.default_currency.symbol}1.00") # Shipping
        assert_text("#{Money.default_currency.symbol}11.02") # Total

        click_link t('workarea.admin.orders.attributes.checkout.view')

        within '.tooltip-content' do
          input = find('#traffic_referrer_url')

          assert_equal('https://foo.bar', input.value)
          assert_text(t('workarea.admin.orders.attributes.checkout.copy_url'))
        end
      end

      def test_timeline
        order = create_placed_order

        Fulfillment.find(order.id).tap do |fulfillment|
          fulfillment.ship_items(
            '1z', ['id' => order.items.first.id, 'quantity' => 2]
          )
        end
        visit admin.order_path(order)

        assert_text(t('workarea.admin.orders.timeline.placed'))
        assert_text(t('workarea.admin.orders.timeline.shipped', count: 2))

        click_link t('workarea.admin.timeline.card.title')

        assert_text(t('workarea.admin.orders.timeline.placed'))
        assert_text(t('workarea.admin.orders.timeline.created'))
        assert_text(
          t(
            'workarea.admin.orders.timeline.authorize.success',
            type: 'credit card',
            amount: amount
          )
        )
      end

      def test_payment
        Workarea.config.checkout_payment_action = {
          shipping: 'authorize!',
          partial_shipping: 'authorize!',
          no_shipping: 'authorize!'
        }

        order = create_placed_order
        visit admin.order_path(order)
        click_link t('workarea.admin.orders.attributes.payment.title')

        assert_text('Ben Crouse')
        assert_text('22 S. 3rd St.')
        assert_text('Philadelphia')
        assert_text('PA')
        assert_text('19106')
        assert_text('Credit Card')
        assert_text('-1') # Card Number
        assert_text('Authorize')
        assert_text('Success')
        assert_text(amount) # Auth Amount
      end

      private

      def amount
        Admin::ApplicationController.helpers.number_to_currency(11.02.to_m)
      end
    end
  end
end
